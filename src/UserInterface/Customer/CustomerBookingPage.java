/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.AirlinerDirectory;
import Business.User.Airliner;
import Business.CustomerDirectory;
import Business.Flight;
import Business.MasterTicketCatalog;
import Business.Seat;
import Business.SeatDirectory;
import Business.Ticket;
import Business.TicketDirectory;
import Business.MasterSeatDirectory;
import Business.User.Customer;
import UserInterface.Flight.ViewFlight;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author Manasa
 */
public class CustomerBookingPage extends javax.swing.JPanel{

    private JPanel CardSequenceJPanel;
    private String customer;
    private CustomerDirectory customerList;
    private MasterSeatDirectory sd;
    private int seatCount;
    private TicketDirectory td;
    private AirlinerDirectory airlinerDirectory;
    private String flightName;
    private List<String> choiceList;
    private String seatSelected ;
    private int flightPrice;
    private MasterTicketCatalog ticketCatalog;
    public CustomerBookingPage(JPanel CardSequenceJPanel, CustomerDirectory customerList,String customer,AirlinerDirectory airlinerDirectory, MasterSeatDirectory sd,MasterTicketCatalog ticketCatalog){
        initComponents();
        this.sd= sd;
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.customerList = customerList;
        this.airlinerDirectory  = airlinerDirectory;
        this.td= new TicketDirectory();
        this.customer = customer;
        this.ticketCatalog = ticketCatalog;
        this.seatCount = 0;
        this.flightName = "";
        this.choiceList = new ArrayList<String>();
        lblPassengerNum2.setEnabled(false);
        lblSeatNum.setEnabled(false);
        seatComboBoxB.setEnabled(false);
        btnNextPass.setEnabled(false);
        btnProceedConfirmation.setEnabled(false);
        tblTicket.setEnabled(false);
        btnViewTicket.setEnabled(false);
        btnRemove.setEnabled(false);
        btnCheckOut.setEnabled(false);
        seatSelected="";
        flightPrice = 0;
    }

    public int getSeatCount() {
        return seatCount;
    }

    public void setSeatCount(int seatCount) {
        this.seatCount = seatCount;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightTable = new javax.swing.JTable();
        btnSearchProduct1 = new javax.swing.JButton();
        btnSearchAll = new javax.swing.JButton();
        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        btnSearchProduct5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSearchProduct2 = new javax.swing.JButton();
        ComboBoxTime = new javax.swing.JComboBox<>();
        btnSearchProduct3 = new javax.swing.JButton();
        txtDate = new javax.swing.JTextField();
        passengerCount = new javax.swing.JSpinner();
        btnSeatSelection = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnViewFlight = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnViewTicket = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTicket = new javax.swing.JTable();
        btnCheckOut = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblPassengerNum2 = new javax.swing.JLabel();
        seatComboBoxD = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        seatComboBoxB = new javax.swing.JComboBox();
        btnProceedConfirmation = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        seatComboBoxC = new javax.swing.JComboBox();
        btnNextPass = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblSeatNum = new javax.swing.JLabel();
        seatComboBoxE = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtChoiceSeats = new javax.swing.JTextField();
        lblPassengerNum = new javax.swing.JLabel();
        seatComboBoxA = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        seatComboBoxF = new javax.swing.JComboBox();

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btnBack.setText("< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("FLIGHT BOOKING PAGE");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Step 1: Select Flight and Add Passenger", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        flightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlightNo.", "From", "To", "Date", "Price", "Airliner", "Time", "DepartureTime"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightTable);

        btnSearchProduct1.setText("From:");
        btnSearchProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProduct1ActionPerformed(evt);
            }
        });

        btnSearchAll.setText("Search All Flights");
        btnSearchAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchAllActionPerformed(evt);
            }
        });

        btnSearchProduct5.setText("Date:");
        btnSearchProduct5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProduct5ActionPerformed(evt);
            }
        });

        jLabel1.setText("(Click on the Columns to filter by criteria)");

        btnSearchProduct2.setText("To");
        btnSearchProduct2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProduct2ActionPerformed(evt);
            }
        });

        ComboBoxTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Afternoon", "Evening", "Night" }));
        ComboBoxTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxTimeActionPerformed(evt);
            }
        });

        btnSearchProduct3.setText("Preferred time:");
        btnSearchProduct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProduct3ActionPerformed(evt);
            }
        });

        passengerCount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnSeatSelection.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnSeatSelection.setText("Proceed to seat selection");
        btnSeatSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeatSelectionActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnViewFlight.setText("View");
        btnViewFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Number of Passenger:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Flight Schedule");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(passengerCount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(336, 336, 336))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnSearchProduct3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ComboBoxTime, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(145, 145, 145)
                                    .addComponent(jLabel1))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(btnSearchProduct1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(113, 113, 113)
                                    .addComponent(btnSearchProduct2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(80, 80, 80)
                                    .addComponent(btnSearchProduct5)))
                            .addGap(18, 18, 18)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(btnViewFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnSeatSelection))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 738, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(btnSearchAll))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchProduct2)
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchProduct5))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchProduct1)
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch)
                            .addComponent(btnSearchAll)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearchProduct3)
                            .addComponent(ComboBoxTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewFlight)
                    .addComponent(passengerCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeatSelection))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Step 3: Confirm Book", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 102, 102));

        btnViewTicket.setText("View Ticket");
        btnViewTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewTicketActionPerformed(evt);
            }
        });

        tblTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight", "Destination", "TravelDate", "Passengers", "Seats", "Price", "TotalPrice", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblTicket);

        btnCheckOut.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCheckOut.setText("CONFIRM BOOKING");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });

        btnRemove.setText("Delete");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnViewTicket)
                        .addGap(168, 168, 168)
                        .addComponent(btnRemove)
                        .addGap(134, 134, 134)
                        .addComponent(btnCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewTicket)
                    .addComponent(btnRemove)
                    .addComponent(btnCheckOut))
                .addGap(34, 34, 34))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Step 2: Seat Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        lblPassengerNum2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPassengerNum2.setText("Select Seat:");

        seatComboBoxD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxDActionPerformed(evt);
            }
        });

        jLabel2.setText("Left Window ");

        seatComboBoxB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxBActionPerformed(evt);
            }
        });

        btnProceedConfirmation.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnProceedConfirmation.setText("PROCEED  WITH CONFIRMATION");
        btnProceedConfirmation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedConfirmationActionPerformed(evt);
            }
        });

        jLabel3.setText("Left Middle");

        seatComboBoxC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxCActionPerformed(evt);
            }
        });

        btnNextPass.setText("Next Passenger");
        btnNextPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextPassActionPerformed(evt);
            }
        });

        jLabel13.setText("Right Window");

        jLabel10.setText("Right Aisle");

        lblSeatNum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSeatNum.setText("Seat Number:");

        seatComboBoxE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxEActionPerformed(evt);
            }
        });

        jLabel4.setText("Left Aisle");

        jLabel11.setText("Right Middle");

        lblPassengerNum.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPassengerNum.setText("Passenger");

        seatComboBoxA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxAActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel14.setText("Seat Placing:");

        seatComboBoxF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatComboBoxFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblSeatNum)
                                .addGap(18, 18, 18)
                                .addComponent(seatComboBoxA, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(seatComboBoxB, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(seatComboBoxC, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seatComboBoxD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(seatComboBoxE, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(seatComboBoxF, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNextPass))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblPassengerNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblPassengerNum, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtChoiceSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnProceedConfirmation)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassengerNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassengerNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel11)
                        .addComponent(jLabel13)
                        .addComponent(jLabel10))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seatComboBoxB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatComboBoxC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatComboBoxD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatComboBoxA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatComboBoxE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seatComboBoxF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeatNum))
                .addGap(18, 18, 18)
                .addComponent(btnNextPass, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChoiceSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProceedConfirmation))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnBack)
                .addGap(169, 169, 169)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
        layout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed
    public void initializeSeats(String flightName){
        seatComboBoxA.removeAllItems(); 
        seatComboBoxA.addItem("");
        seatComboBoxB.removeAllItems(); 
        seatComboBoxB.addItem("");
        seatComboBoxC.removeAllItems(); 
        seatComboBoxC.addItem("");
        seatComboBoxD.removeAllItems(); 
        seatComboBoxD.addItem("");
        seatComboBoxE.removeAllItems(); 
        seatComboBoxE.addItem("");
        seatComboBoxF.removeAllItems(); 
        seatComboBoxF.addItem("");
        for(SeatDirectory seats: sd.getSeatDirectory()){
            
        for (Seat s : seats.getSeatDirectory()) {
            if(s.getFlightID().equalsIgnoreCase(flightName)){
              if(seats.isSeatAvail(s.getSeatID(), flightName)){
                  switch(seats.getColumnName()){
                      case("A"):
                        seatComboBoxA.addItem(s.getSeatID()); 
                        break;
                     case("B"):
                        seatComboBoxB.addItem(s.getSeatID()); 
                        break;
                      case("C"):
                        seatComboBoxC.addItem(s.getSeatID()); 
                        break;
                     case("D"):
                        seatComboBoxD.addItem(s.getSeatID()); 
                        break;
                      case("E"):
                        seatComboBoxE.addItem(s.getSeatID()); 
                        break;
                     case("F"):
                        seatComboBoxF.addItem(s.getSeatID()); 
                        break;
                     default:
                        
                        break;
                                          
                  }

               }
            }
        }
        }
    }
        
    public void populateTicketTable(){
        DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
        model.setRowCount(0);
        for(Ticket t: td.getTicketDirectory()){
            Object row[] = new Object[8];
            row[0] = t;
            row[1] = t.getDestination();
            row[2] = (t.getTravelDate());
            row[3] = t.getPassengerCount();
            row[4] = t.getSeats();
            row[5] = t.getPrice();
            row[6] = t.getTotalPrice();
            row[7] = t.getStatus();
            model.addRow(row);                    
        }        
    }
    private void btnSeatSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeatSelectionActionPerformed

        choiceList.clear();
        flightPrice = 0;
        seatCount = 0;
        seatSelected="";
        flightName = "";
        txtChoiceSeats.setText("");
     
       int selectedRow = flightTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a flight!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int passenger = (Integer)passengerCount.getValue();
        if(passenger <= 0 ){
                    JOptionPane.showMessageDialog(null, "Passenger Count must be greater than 0!", "Warning", JOptionPane.WARNING_MESSAGE);    
                   return;
        }
       Flight selectedFlight = (Flight)flightTable.getValueAt(selectedRow, 0);
       int availSeats = 0;
       for(SeatDirectory s: sd.getSeatDirectory()){
           availSeats+=s.SeatAvail(selectedFlight.getFlightName());
       }
       
       if(passenger > availSeats){
                JOptionPane.showMessageDialog(null, "Only "+availSeats+" seats available in the selected flight!\nPassenger count is greater than flight seat available!", "Warning", JOptionPane.WARNING_MESSAGE);    
                   return;   
        }
        flightName = selectedFlight.getFlightName();
        initializeSeats(flightName);
        lblPassengerNum.setEnabled(true);
        lblPassengerNum2.setEnabled(true);
        lblSeatNum.setEnabled(true);
        seatComboBoxB.setEnabled(true);
        btnNextPass.setEnabled(true);
        setSeatCount(getSeatCount()+1);
        lblPassengerNum.setText("Passenger "+getSeatCount()); 
        btnProceedConfirmation.setEnabled(true);
        tblTicket.setEnabled(false);
        btnViewTicket.setEnabled(false);
        btnRemove.setEnabled(false);
        btnCheckOut.setEnabled(false);
        
    }//GEN-LAST:event_btnSeatSelectionActionPerformed

    private void seatComboBoxBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxBActionPerformed

    private void btnNextPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextPassActionPerformed
        // TODO add your handling code here:
        btnSeatSelection.setEnabled(false);
        btnViewFlight.setEnabled(false);
        btnSearch.setEnabled(false);
        int selectChoice = 0;
        String seatChoice = "";
        if(!seatComboBoxA.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxA.getSelectedItem());
        }
        if(!seatComboBoxB.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxB.getSelectedItem());
        }
        if(!seatComboBoxC.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxC.getSelectedItem());
        }
        if(!seatComboBoxD.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxD.getSelectedItem());
        }
        if(!seatComboBoxE.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxE.getSelectedItem());
        }
        if(!seatComboBoxF.getSelectedItem().equals("")){
            selectChoice+=1;
            seatChoice = String.valueOf(seatComboBoxF.getSelectedItem());
        }
        if(selectChoice == 0){
             JOptionPane.showMessageDialog(null, "Please choose from available seats to proceed!", "Warning", JOptionPane.WARNING_MESSAGE);    
             return;
        }
        if(selectChoice > 1){
             JOptionPane.showMessageDialog(null, "Please select only one seat per passenger!", "Warning", JOptionPane.WARNING_MESSAGE);    
             return;
        }else{           
        
        if(getSeatCount() == (Integer)passengerCount.getValue()){
            for(SeatDirectory s: sd.getSeatDirectory()){
                if(s.SeatPresent(seatChoice, flightName)){
                   s.assignSeats(flightName, seatChoice, customer); 
                }
            }
            choiceList.add(seatChoice);
            initializeSeats(flightName);
            for(String i:choiceList){
                if(seatSelected.equals("")){
                seatSelected+=i;
                }else{
                    seatSelected+=","+i;
                }
            }
            txtChoiceSeats.setText("Selected Seats:\n"+seatSelected);
             JOptionPane.showMessageDialog(null, "You have chosed seats for all passengers, Click on PROCEED!", "Warning", JOptionPane.WARNING_MESSAGE);    
             return;         
        }
            for(SeatDirectory s: sd.getSeatDirectory()){
                if(s.SeatPresent(seatChoice, flightName)){
                   s.assignSeats(flightName, seatChoice, customer); 
                }
            }
            choiceList.add(seatChoice);
        setSeatCount(getSeatCount()+1);
        if(getSeatCount()<= (Integer)passengerCount.getValue()){
        lblPassengerNum.setText("Passenger "+getSeatCount());
        initializeSeats(flightName);
        }
        }
    }//GEN-LAST:event_btnNextPassActionPerformed

    private void btnProceedConfirmationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedConfirmationActionPerformed
        // TODO add your handling code here:
        if(getSeatCount()< (Integer)passengerCount.getValue()){
        JOptionPane.showMessageDialog(null, "Please choose from available seats for all passengers to proceed!", "Warning", JOptionPane.WARNING_MESSAGE);    
                   return;        
        }
        btnSeatSelection.setEnabled(true);
        btnViewFlight.setEnabled(true);
        btnSearch.setEnabled(true);
        btnNextPass.setEnabled(false);
        btnProceedConfirmation.setEnabled(false);
        tblTicket.setEnabled(true);
        btnViewTicket.setEnabled(true);
        btnRemove.setEnabled(true);
        btnCheckOut.setEnabled(true);
        txtChoiceSeats.setText("");
        int selectedRow = flightTable.getSelectedRow();
        int people = (Integer)passengerCount.getValue();
        Flight selectedFlight = (Flight)flightTable.getValueAt(selectedRow, 0);
                    Ticket t = td.addTicket();
                    t.setAirplane(selectedFlight.getAirplane());
                    t.setCustomerID(customer);
                    t.setDestination(selectedFlight.getDestination());
                    t.setPassengerCount(people);
                    t.setFlightNum(flightName);
                    t.setTravelDate(selectedFlight.getFlightDate());
                    t.setPrice(Integer.parseInt(selectedFlight.getTicketPrice()));
                    t.setTotalPrice(Integer.parseInt(selectedFlight.getTicketPrice())*choiceList.size());
                    t.setSeats(seatSelected);
                    t.setArrivalTime(selectedFlight.getArrivalTime());
                    t.setDepartTime(selectedFlight.getDepartureTime());
                    t.setFlightFrom(selectedFlight.getOrigin());
                    t.setStatus("CONFIRMED");
                    populateTicketTable();
    }//GEN-LAST:event_btnProceedConfirmationActionPerformed

    private void btnViewTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewTicketActionPerformed
           int row = tblTicket.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        Ticket t = (Ticket)tblTicket.getValueAt(row, 0);
        ViewTicketPage viewTPanel = new ViewTicketPage(CardSequenceJPanel, t);
        CardSequenceJPanel.add("ViewTicketPage", viewTPanel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
    }//GEN-LAST:event_btnViewTicketActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
             int row = tblTicket.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        Ticket t = (Ticket)tblTicket.getValueAt(row, 0);
        for(String i : choiceList){
             for(SeatDirectory s: sd.getSeatDirectory()){
                if(s.SeatPresent(i, flightName)){
                   s.freeSeat(flightName, i); 
                }
            }
        }
        td.deleteTicket(t);
        JOptionPane.showMessageDialog(null, "Ticket has been removed!");
        populateTicketTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
            if(td.getTicketDirectory().size() > 0){
                for(Ticket t: td.getTicketDirectory()){
            ticketCatalog.addOrder(t);
                }
            td.getTicketDirectory().clear();
            JOptionPane.showMessageDialog(null, "Order placed Successfully!");
            populateTicketTable();
            }else{
            JOptionPane.showMessageDialog(null, "No orders placed!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

    private void btnSearchProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProduct1ActionPerformed

    }//GEN-LAST:event_btnSearchProduct1ActionPerformed

    private void btnSearchProduct2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProduct2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchProduct2ActionPerformed

    private void btnSearchProduct5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProduct5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchProduct5ActionPerformed

    private void btnSearchProduct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProduct3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchProduct3ActionPerformed

    private void ComboBoxTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxTimeActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
       Flight from = null;
        Flight to = null;
       // Flight flightNumber = null;
        Flight dates = null;
        String travelDate;
        Flight prefTime = null ;
        String error = "";    
        int found=0;
        if((txtFrom.equals("")) && (txtTo.equals("")) && (txtDate.equals(""))){
          
            JOptionPane.showMessageDialog(null, "Please enter all the required details", "Information", JOptionPane.INFORMATION_MESSAGE);
            
        }else{
         
        found=0;
        for (Airliner airliner : airlinerDirectory.getAirliners()){
            if (found != 1)
            {   from = airliner.getFlightSchedule().searchFrom(txtFrom.getText());
                to = airliner.getFlightSchedule().searchDestination(txtTo.getText());
              //  flightNumber = airliner.getFlightSchedule().searchFlightNumber(txtFlightNumber.getText());
                String dateFlight = txtDate.getText();
                Object time = ComboBoxTime.getSelectedItem();
                String prefferedtime = time.toString();
                prefTime = airliner.getFlightSchedule().searchTime(prefferedtime);
                DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                try {
                    Date date = format.parse(dateFlight);
                    dates = airliner.getFlightSchedule().searchDate(date);
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Date invalid format!", "Information", JOptionPane.INFORMATION_MESSAGE);

                }
            }if ((from != null) && (to != null) && (dates != null) && (prefTime != null)) {
                    found = 1;
                }
            }

        if ((from == null) || (to == null) || (dates == null) || (prefTime == null)) {
                error="No flights exists for the entered details";
                JOptionPane.showMessageDialog(null, error, "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
            
            Object time = ComboBoxTime.getSelectedItem();
            String prefferedtime = time.toString();
            String dateFlight = txtDate.getText();
            
            
            DefaultTableModel dtm = (DefaultTableModel)flightTable.getModel(); 
            TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(flightTable.getModel());
            flightTable.setRowSorter(rowSorter);
            List<RowFilter<Object, Object>> filters = new ArrayList<RowFilter<Object, Object>>(6);
            filters.add(RowFilter.regexFilter(txtFrom.getText().trim(),1));
            filters.add(RowFilter.regexFilter(txtTo.getText().trim(),2));
       //    filters.add(RowFilter.regexFilter(txtFlightNumber.getText().trim(),0));
            filters.add(RowFilter.regexFilter(dateFlight.trim(),3)); 
           filters.add(RowFilter.regexFilter(prefferedtime.trim(),6));
            RowFilter<Object, Object> rf = RowFilter.andFilter(filters);
            rowSorter.setRowFilter(rf);
            populateTable();
            
           }
        }

    }//GEN-LAST:event_btnSearchActionPerformed
    public void populateTable() {        
  
            DefaultTableModel model = (DefaultTableModel) flightTable.getModel();
        model.setRowCount(0);
       for (Airliner airliner : airlinerDirectory.getAirliners()) {
           {
        for (Flight f : airliner.getFlightSchedule().getFlightList()){
            Object row[] = new Object[10];
            row[0] = f;
            row[1] = f.getOrigin();
            row[2] = f.getDestination();
            DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            row[3] = format.format(f.getFlightDate());
            row[4] = f.getTicketPrice();
            row[5] = airliner;
            row[6] = f.getPreferedTime();
            row[7] = f.getDepartureTime();
            model.addRow(row);
        }
           }
       }
    }
    private void btnViewFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightActionPerformed
        // TODO add your handling code here:
        int selectedRow =  flightTable.getSelectedRow();
        if(selectedRow <0)
        {
            JOptionPane.showMessageDialog(null,"Please select a row","Warning", JOptionPane.WARNING_MESSAGE);

        }

        else
        {
            Flight f =(Flight) flightTable.getValueAt(selectedRow,0);

            ViewFlight panel = new ViewFlight(CardSequenceJPanel,f,customer,customerList);
            CardSequenceJPanel.add("ViewFlight",panel);
            CardLayout layout =(CardLayout) CardSequenceJPanel.getLayout();
            layout.next(CardSequenceJPanel);

        }

    }//GEN-LAST:event_btnViewFlightActionPerformed

    private void seatComboBoxCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxCActionPerformed

    private void seatComboBoxDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxDActionPerformed

    private void seatComboBoxAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxAActionPerformed

    private void seatComboBoxEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxEActionPerformed

    private void seatComboBoxFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatComboBoxFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seatComboBoxFActionPerformed

    private void btnSearchAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchAllActionPerformed
        // TODO add your handling code here:
        populateAllFlight();
    }//GEN-LAST:event_btnSearchAllActionPerformed

    public void populateAllFlight() {
        DefaultTableModel model = (DefaultTableModel) flightTable.getModel();
        model.setRowCount(0);
       for (Airliner airliner : airlinerDirectory.getAirliners()) {
           {
        for (Flight f : airliner.getFlightSchedule().getFlightList()){
            Object row[] = new Object[10];
            row[0] = f;
            row[1] = f.getOrigin();
            row[2] = f.getDestination();
            DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            row[3] = format.format(f.getFlightDate());
            row[4] = f.getTicketPrice();
            row[5] = airliner;
            row[6] = f.getPreferedTime();
            row[7] = f.getDepartureTime();
            model.addRow(row);
            
        }
           }
       }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxTime;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnNextPass;
    private javax.swing.JButton btnProceedConfirmation;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchAll;
    private javax.swing.JButton btnSearchProduct1;
    private javax.swing.JButton btnSearchProduct2;
    private javax.swing.JButton btnSearchProduct3;
    private javax.swing.JButton btnSearchProduct5;
    private javax.swing.JButton btnSeatSelection;
    private javax.swing.JButton btnViewFlight;
    private javax.swing.JButton btnViewTicket;
    private javax.swing.JTable flightTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPassengerNum;
    private javax.swing.JLabel lblPassengerNum2;
    private javax.swing.JLabel lblSeatNum;
    private javax.swing.JSpinner passengerCount;
    private javax.swing.JComboBox seatComboBoxA;
    private javax.swing.JComboBox seatComboBoxB;
    private javax.swing.JComboBox seatComboBoxC;
    private javax.swing.JComboBox seatComboBoxD;
    private javax.swing.JComboBox seatComboBoxE;
    private javax.swing.JComboBox seatComboBoxF;
    private javax.swing.JTable tblTicket;
    private javax.swing.JTextField txtChoiceSeats;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables

}
