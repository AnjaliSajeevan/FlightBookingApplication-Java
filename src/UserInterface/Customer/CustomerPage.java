/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.AgentDirectory;
import Business.AirlinerDirectory;
import Business.CustomerDirectory;
import Business.MasterTicketCatalog;
import Business.MasterSeatDirectory;
import Business.SeatDirectory;
import Business.Ticket;
import Business.TicketDirectory;
import Business.User.Agent;
import Business.User.Customer;
import UserInterface.TravelAgency.MasterTravelSchedule;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manasa
 */
public class CustomerPage extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPage
     */
        private JPanel CardSequenceJPanel;
    private String cuserid;
    private Customer c;
    private Agent a;
    private CustomerDirectory customerList;
    private AirlinerDirectory airlinerDirectory;
    private MasterSeatDirectory sd;
    private MasterTicketCatalog td;
    private AgentDirectory agentDirectory;
    public CustomerPage(JPanel CardSequenceJPanel, CustomerDirectory customerList,String cuserid,AgentDirectory agentDirectory,AirlinerDirectory airlinerDirectory,MasterSeatDirectory sd, MasterTicketCatalog td) {
        initComponents();
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.agentDirectory = agentDirectory;
        this.cuserid = cuserid;
        this.customerList = customerList;
        this.airlinerDirectory = airlinerDirectory;
        this.sd = sd;
        this.td = td;
        boolean checkCust = false;
        for(Customer c: customerList.getCustomers()){
            if(c.getUserName().equals(cuserid)){
                checkCust = true;
            }
        }
        if(!checkCust){
            btnViewCust.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnViewCust = new javax.swing.JButton();
        btnSearchFlights = new javax.swing.JButton();
        btnBookFlights = new javax.swing.JButton();
        btnFlightHistory = new javax.swing.JButton();
        btnActiveFlight = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblTicket = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        btnBack.setText("< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Noteworthy", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CHOOSE YOUR OPTION");

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        btnViewCust.setText("View Customer Profile");
        btnViewCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCustActionPerformed(evt);
            }
        });

        btnSearchFlights.setText("Search Flights");
        btnSearchFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchFlightsActionPerformed(evt);
            }
        });

        btnBookFlights.setText("Book Flights");
        btnBookFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnViewCust, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                    .addComponent(btnSearchFlights, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBookFlights, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnViewCust, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBookFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnFlightHistory.setText("Flight History");
        btnFlightHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlightHistoryActionPerformed(evt);
            }
        });

        btnActiveFlight.setText("Scheduled Flight details");
        btnActiveFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActiveFlightActionPerformed(evt);
            }
        });

        tblTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight", "Destination", "TravelDate", "Passengers", "Seats", "Price", "TotalPrice", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblTicket);

        btnView.setText("View Details");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnCancel.setText("CANCEL UPCOMING FLIGHT");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnFlightHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActiveFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btnBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(btnView)
                        .addGap(62, 62, 62)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(318, 318, 318)
                        .addComponent(jLabel2)))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBack)
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFlightHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActiveFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnCancel))
                .addGap(117, 117, 117))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
        layout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBookFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookFlightsActionPerformed
        // TODO add your handling code here:

        CustomerBookingPage bookCPanel = new CustomerBookingPage(CardSequenceJPanel,customerList,cuserid,airlinerDirectory,sd,td);
        CardSequenceJPanel.add("CustomerBookingPage",bookCPanel);
        CardLayout layout =(CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
    }//GEN-LAST:event_btnBookFlightsActionPerformed

    private void btnViewCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCustActionPerformed
        // TODO add your handling code here:
        boolean checkCust = false;
        for(Customer c: customerList.getCustomers()){
            if(c.getUserName().equals(cuserid)){
                checkCust = true;
            }
        }
        if(checkCust){
        ViewCustomerProfile viewCPanel = new ViewCustomerProfile(CardSequenceJPanel,customerList,cuserid,agentDirectory);
        CardSequenceJPanel.add("ViewCustomerProfile",viewCPanel);
        CardLayout layout =(CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
        }
    }//GEN-LAST:event_btnViewCustActionPerformed

    private void btnFlightHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlightHistoryActionPerformed
        // TODO add your handling code here:
        populateFlights(false);
    }//GEN-LAST:event_btnFlightHistoryActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int row = tblTicket.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        Ticket t = (Ticket)tblTicket.getValueAt(row, 0);
        ViewTicketPage viewTPanel = new ViewTicketPage(CardSequenceJPanel, t);
        CardSequenceJPanel.add("ViewTicketPage", viewTPanel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnActiveFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActiveFlightActionPerformed
        // TODO add your handling code here:
        populateFlights(true);
    }//GEN-LAST:event_btnActiveFlightActionPerformed

    private void btnSearchFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchFlightsActionPerformed
        // TODO add your handling code here:
                boolean c = airlinerDirectory.getAirliners().isEmpty();
        if( (c==false)){
        MasterTravelSchedule mastertravel = new MasterTravelSchedule(CardSequenceJPanel,airlinerDirectory,customerList,cuserid);
        CardSequenceJPanel.add("MasterTravelSchedule",mastertravel);
        CardLayout layout =(CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
        }
        else
        {
         JOptionPane.showMessageDialog(null,"Please enter airline details", "Information",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchFlightsActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int row = tblTicket.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Pls select a row from Scheduled Flights!!", "Warning", JOptionPane.WARNING_MESSAGE);
           return;
        }
          int confirmed = JOptionPane.showConfirmDialog(null, "Are you Sure you want to cancel the booking?\nNote:Cancelling charges apply.","Confirm Delete",JOptionPane.YES_NO_OPTION);
                 if(confirmed == JOptionPane.YES_OPTION){
        Ticket t = (Ticket)tblTicket.getValueAt(row, 0);
        String[] seats;
        seats = t.getSeats().split(",");
        for(String i : seats){
            for(SeatDirectory s: sd.getSeatDirectory()){
                if(s.SeatPresent(i,t.getFlightNum() )){
                     s.freeSeat(t.getFlightNum(), i);
                }
            }
        }
        
        t.setStatus("CANCELLED");
        JOptionPane.showMessageDialog(null, "Ticket has been cancelled!");
        populateFlights(true);
                 } 
        
        
    }//GEN-LAST:event_btnCancelActionPerformed

    public void populateFlights(boolean active){
        
        DefaultTableModel model = (DefaultTableModel)tblTicket.getModel();
        model.setRowCount(0);
        for(Ticket t: td.getTicketCatalog()){
            if(active){
                if(t.getStatus().equalsIgnoreCase("CONFIRMED")){
                if(t.getTravelDate().after(new Date())){
            
            Object row[] = new Object[8];
            row[0] = t;
            row[1] = t.getDestination();
            row[2] = (t.getTravelDate());
            row[3] = t.getPassengerCount();
            row[4] = t.getSeats();
            row[5] = t.getPrice();
            row[6] = t.getTotalPrice();
            row[7] = t.getStatus();
            model.addRow(row);  
                }
                }
            }else{
            Object row[] = new Object[8];
            row[0] = t;
            row[1] = t.getDestination();
            row[2] = (t.getTravelDate());
            row[3] = t.getPassengerCount();
            row[4] = t.getSeats();
            row[5] = t.getPrice();
            row[6] = t.getTotalPrice();
            row[7] = t.getStatus();
            model.addRow(row);    
            }
        }        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActiveFlight;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBookFlights;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFlightHistory;
    private javax.swing.JButton btnSearchFlights;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewCust;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblTicket;
    // End of variables declaration//GEN-END:variables
}
